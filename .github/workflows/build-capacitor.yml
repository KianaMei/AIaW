name: Build Android
run-name: Creating Production Ready Android App

on:
  release:
    types: [published]
  push:
    tags:
      - 'v*'
    branches:
      - master

jobs:
  build:
    name: Build APK
    permissions:
      contents: write
    runs-on: ubuntu-latest
    env:
      KEYSTORE: ${{ secrets.RELEASE_KEYSTORE }}
      KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
      KEYSTORE_ALIAS: ${{ secrets.KEYSTORE_ALIAS }}
      KEYSTORE_ALIAS_PASSWORD: ${{ secrets.KEYSTORE_ALIAS_PASSWORD }}
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          api-level: 34
          build-tools: '34.0.0'

      - name: Setup java
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: "21"

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.14.0
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Setup .env
        run: cp .env.app .env.local

      - name: Build frontend
        run: pnpm build

        - name: Determine tag
          shell: bash
          run: |
            if [ "${{ github.event_name }}" = "release" ]; then
              echo "TAG=${{ github.event.release.tag_name }}" >> "$GITHUB_ENV"
            else
              echo "TAG=${GITHUB_REF_NAME}" >> "$GITHUB_ENV"
            fi

        - name: Ensure release exists
          if: ${{ github.event_name == 'release' || startsWith(env.TAG, 'v') }}
          id: ensure_release
          shell: bash
          env:
            GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          run: |
            TAG='${{ env.TAG }}'
            if [ "${{ github.event_name }}" = "release" ]; then
              echo "release_id=${{ github.event.release.id }}" >> "$GITHUB_OUTPUT"
            else
              if ! gh release view "$TAG" >/dev/null 2>&1; then
                gh release create "$TAG" -t "$TAG" -n "Automated release" || exit 1
              fi
              echo "release_id=$(gh release view "$TAG" --json id -q .id)" >> "$GITHUB_OUTPUT"
            fi

      - name: Add android folder if not present
        run: if [ ! -d "./android" ]; then npx cap add android; fi

      - name: Capacitor sync
        run: npx cap sync

      - name: Extract Android signing key from env (if provided)
        if: ${{ env.KEYSTORE != '' }}
        run: |
          echo "$KEYSTORE" | base64 -d > android/release.decrypted.jks

      - name: Set gradlew permissions
        run: chmod +x ./android/gradlew

      - name: Build Signed Release APK
        if: ${{ env.KEYSTORE != '' && env.KEYSTORE_PASSWORD != '' && env.KEYSTORE_ALIAS != '' && env.KEYSTORE_ALIAS_PASSWORD != '' }}
        working-directory: ./android
        run: |
          ./gradlew assembleRelease \
            -Pandroid.injected.signing.store.file=${{ github.workspace }}/android/release.decrypted.jks \
            -Pandroid.injected.signing.store.password="$KEYSTORE_PASSWORD" \
            -Pandroid.injected.signing.key.alias="$KEYSTORE_ALIAS" \
            -Pandroid.injected.signing.key.password="$KEYSTORE_ALIAS_PASSWORD"

      - name: Build Unsigned Release APK (fallback when no keystore)
        if: ${{ env.KEYSTORE == '' || env.KEYSTORE_PASSWORD == '' || env.KEYSTORE_ALIAS == '' || env.KEYSTORE_ALIAS_PASSWORD == '' }}
        working-directory: ./android
        run: ./gradlew assembleRelease

      - name: Zip spa bundle
        working-directory: ./dist/spa
        run: zip -qq -r ../../spa.zip .

        - name: Upload assets to GitHub Release
          if: ${{ github.event_name == 'release' || startsWith(env.TAG, 'v') }}
          env:
            GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          run: |
            TAG='${{ env.TAG }}'
            shopt -s nullglob
            APK_PATHS=(
              "./android/app/build/outputs/apk/release/app-release.apk"
              "./android/app/build/outputs/apk/release/app-release-unsigned.apk"
              "./android/app/build/outputs/apk/debug/app-debug.apk"
            )
          for APK in "${APK_PATHS[@]}"; do
            if [ -f "$APK" ]; then
              NAME="AIaW_${TAG}_$(basename "$APK")"
              gh release upload "$TAG" "$APK#${NAME}" --clobber || true
            fi
          done
            gh release upload "$TAG" \
              "./spa.zip#spa_bundle_${TAG}.zip" \
              "./src/version.json" \
              --clobber

        - name: Upload Android artifacts (non-tag push)
          if: ${{ github.event_name != 'release' && !startsWith(env.TAG, 'v') }}
          uses: actions/upload-artifact@v4
          with:
            name: android-build-${{ github.run_id }}
            if-no-files-found: warn
            retention-days: 7
            path: |
              android/app/build/outputs/apk/release/*.apk
              android/app/build/outputs/apk/debug/*.apk
              spa.zip
